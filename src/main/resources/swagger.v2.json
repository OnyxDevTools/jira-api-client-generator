{
  "swagger": "2.0",
  "info": {
    "description": "Simple REST service illustrating Intuit's best practices and patterns",
    "version": "1.0",
    "title": "Spring Boot Reference Service",
    "termsOfService": "https://github.intuit.com/<orgName>/DemoApplication",
    "contact": {
      "name": "JSK - Intuit Services Platform Team",
      "url": "https://github.intuit.com/<orgName>",
      "email": "CTO-DevISPTeam@intuit.com"
    },
    "license": {
      "name": "Intuit Source Code License",
      "url": "https://insight.intuit.com/WorkResources/LegalAndPolicies/IntellectualProperty/3rdPartyCode/Pages/3rdPartyCode.aspx"
    }
  },
  "host": "localhost:8443",
  "basePath": "/",
  "tags": [
    {
      "name": "document-controller",
      "description": "Document Controller"
    }
  ],
  "paths": {
    "/v1/documents": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "Get all the documents",
        "description": "Get all the documents",
        "operationId": "getDocumentsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Documents"
            }
          },
          "500": {
            "description": "Unexpected error handling request",
            "schema": {
              "$ref": "#/definitions/SimpleErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "privateAuthUser": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "document-controller"
        ],
        "summary": "Create a new document that has content",
        "description": "Provides mechanism to create a document record. DocumentId is dynamically generated for the passed-in content. The creation and last modified dates are set to the date when the document gets created. The userName is set to the logged in user name from iamPrincipal.",
        "operationId": "createDocumentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "document",
            "description": "Document object that contains a content field",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected error handling request",
            "schema": {
              "$ref": "#/definitions/SimpleErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "privateAuthUser": []
          }
        ],
        "deprecated": false
      }
    },
    "/v1/documents/{documentId}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "Get a document by document ID",
        "operationId": "getDocumentUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The document ID that was returned in the document object from the POST command",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected error handling request",
            "schema": {
              "$ref": "#/definitions/SimpleErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "privateAuthUser": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "document-controller"
        ],
        "summary": "Update a document's content based on the document ID",
        "operationId": "updateDocumentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "document",
            "description": "Document object that contains a content field with updated content",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The document ID that was returned in the document object from the POST command",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected error handling request",
            "schema": {
              "$ref": "#/definitions/SimpleErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "privateAuthUser": []
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "document-controller"
        ],
        "summary": "Delete a document by document ID",
        "operationId": "deleteDocumentUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The document ID that was returned in the document object from the POST command",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content (delete successful)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected error handling request",
            "schema": {
              "$ref": "#/definitions/SimpleErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "privateAuthUser": []
          }
        ],
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Document": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "newField": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "Document"
    },
    "SimpleErrorResponseBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "debugInfo": {
          "type": "string"
        }
      },
      "title": "SimpleErrorResponseBody"
    },
    "Documents": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        }
      },
      "title": "Documents"
    }
  }
}